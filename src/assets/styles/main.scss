@use "bulma/sass/utilities/initial-variables" as bulma;

:root {
	--primary-color: #bf545e;
	--secondary-color: #bf545e;
	--tertiary-color: #7d5032;
	--section-background-color: #ccb495;
	--background-color: #ffded4;
	--link-color: #99404b;
	--border-radius: 20px;
}

html {
	background-color: var(--background-color);
	overflow-wrap: break-word;
}

@keyframes fade-in {
	from {
		opacity: 0;
	}
}

.transition-main-enter-active {
	animation: fade-in 500ms ease-out;
}

main {
	display: grid;
	grid-template-rows: 1fr auto auto auto 1fr;
}

header,
section {
	text-align: center;
	width: min(800px, 80vw);
	margin: 30px auto 0 auto;
}

.trezor-status-container {
	position: fixed;
	top: 10px;
	left: 10px;
	background-color: var(--background-color);
	z-index: 10;

	.trezor-status {
		&--connected {
			color: bulma.$green;
		}

		&--disconnected {
			color: bulma.$red;
		}
	}
}

.address-number-container {
	position: fixed;
	top: 40px;
	left: 10px;
	background-color: var(--background-color);
	z-index: 10;

	.address-number {
		font-weight: bold;
		font-size: 1.1rem;
	}
}

.logo-container {
	display: inline-flex;
	align-items: flex-end;

	img {
		width: min(380px, 50vw);
	}

	.beta-text {
		color: var(--tertiary-color);
		font-family: monospace;
		font-weight: bold;
		font-size: 2rem;
	}
}

.balance::after {
	content: "ꜩ";
}

section {
	margin: 30px auto;
	padding: 40px 50px 80px 50px;
	border-radius: var(--border-radius);
	color: var(--tertiary-color);
	background-color: var(--section-background-color);
	box-shadow: 5px 5px 0 var(--tertiary-color);
	overflow-x: auto;
}

.operations {
	.header {
		border-bottom: 1px solid bulma.$grey-light;
	}

	.operation {
		display: grid;
		grid-template-columns: repeat(5, 1fr);
		gap: 2%;
		margin-bottom: 10px;

		> a {
			white-space: nowrap;
			overflow: hidden;
			text-overflow: ellipsis;
		}

		.amount::after {
			content: "ꜩ";
		}

		.reward,
		.receive,
		.send {
			&::before {
				content: "";
				display: inline-block;
				mask-image: url("../../assets/icons/arrow-right.svg");
				mask-repeat: no-repeat;
				mask-size: 1rem;
				width: 1rem;
				height: 1rem;
				margin-right: 0.5rem;
			}
		}

		.reward::before {
			background-color: bulma.$cyan;
			transform: rotate(45deg);
		}

		.receive::before {
			background-color: bulma.$green;
			transform: rotate(45deg);
		}

		.send::before {
			background-color: bulma.$red;
			transform: rotate(-45deg);
		}

		.reveal {
			cursor: help;

			svg {
				width: 1rem;
				height: 1rem;
			}
		}
	}
}

a {
	color: var(--link-color);
}

a[target="_blank"] {
	path {
		fill: var(--link-color);
	}

	svg:hover {
		path {
			fill: bulma.$grey-darker;
		}
	}

	&:hover {
		&::after {
			background-color: bulma.$grey-darker;
		}
	}

	&::after {
		content: "";
		display: inline-block;
		transform: translateY(-0.5px);
		mask-image: url("/icons/external-link-alt-solid.svg");
		mask-repeat: no-repeat;
		mask-position: center;
		mask-size: auto;
		width: 0.7em;
		height: 0.7em;
		margin-left: 2px;
		background-color: var(--link-color);
	}
}

@keyframes notification-entrance {
	from {
		opacity: 0;
		transform: scaleY(0);
	}
	to {
		opacity: 1;
		transform: scaleY(1);
	}
}

.notification {
	animation: notification-entrance 300ms linear;

	a {
		white-space: nowrap;
	}
}

.notification:not(.is-success, .is-danger) {
	background-color: transparent;
	border: 2px solid var(--primary-color);
	border-radius: calc(var(--border-radius) / 2);
}

@keyframes drop-shadow {
	0% {
		box-shadow: 0 0 0 0 black;
	}
	100% {
		box-shadow: 2px 2px 5px black;
	}
}

.button.is-primary {
	background-color: var(--primary-color);
	color: white;
}

.button.is-primary:hover {
	background-color: var(--primary-color);
	animation: drop-shadow 300ms cubic-bezier(0.25, 0.46, 0.45, 0.94) both;
}

.button.is-primary:focus {
	background-color: var(--primary-color);
}

.button.is-primary.is-loading {
	background-color: var(--primary-color);
}

a.active {
	border-bottom: 3px solid var(--tertiary-color);
}

.tabs a:hover {
	border-bottom: 3px solid var(--secondary-color);
}

input.input[type="text"]:focus,
input.input[type="number"]:focus {
	border-color: var(--secondary-color);
	box-shadow: none;
}

form {
	margin-bottom: 10px;
}

@keyframes expand {
	0% {
		opacity: 0;
		transform: translatey(-15px);
	}
	100% {
		opacity: 1;
		transform: translatey(0);
	}
}

details[open] p {
	animation: expand 200ms linear;
}

summary {
	margin-top: 10px;
	cursor: pointer;
	user-select: none;
}

footer {
	display: flex;
	justify-content: space-between;

	@media (max-width: bulma.$tablet) {
		flex-direction: column;
		gap: 20px;
	}

	.node-status-container {
		font-size: 1rem;

		.node-status {
			&--online {
				color: bulma.$green;
			}

			&--offline {
				color: bulma.$red;
			}
		}
	}

	.left {
		text-align: left;
		margin-left: 20px;

		@media (max-width: bulma.$tablet) {
			text-align: center;
			margin: 0;
		}
	}

	.right {
		text-align: right;
		margin-right: 20px;

		@media (max-width: bulma.$tablet) {
			text-align: center;
			margin: 0;
		}
	}
}
